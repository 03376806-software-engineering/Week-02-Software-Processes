1.โดยทั่วไป การพัฒนาซอฟต์แวร์แบบ incremental developement นั้น จะเหมาะกับการสร้างซอฟต์แวร์ที่ user เองก็ยังมีไอเดียไม่ชัดเจน หรือยังไม่รู้ความต้องการของตัวเอง ในคำกล่าวข้างต้น เป็นจริงหรือไม่ จงอภิปราย
ตอบ จากคำกล่าวข้างต้นนั้นเป็นจริงเพราะกระบวนการพัฒนาซอฟต์แวร์แบบ incremental development ไม่จำเป็นต้องรู้ถึงการทำงานทั้งหมดที่ผู้ใช้ต้องการแต่จะค่อยๆเพิ่มหน้าที่การทำงานอื่นๆในแต่ละส่วนที่ลูกค้าต้องการเพิ่มเติมเข้าไปกระบวนการนี้ไม่เหมาะกับการพัฒนาซอฟต์แวร์ที่มีขนาดใหญ่

2.จงเปรียบเทียบข้อแตกต่าง (ข้อดี-ข้อเสียหรือข้อจำกัด) ระหว่างกระบวนการพัฒนาซอฟต์แวร์แบบต่างๆ ที่ท่านรู้จัก
ตอบ                                                   ข้อดี                                                       ข้อเสีย

    Waterfall Model                      - แบ่งงานยากให้เป็นงานที่เล็กง่ายต่อการจัดการ                 - ผู้ใช้จะทดสอบโปรแกรมได้ก็ต่อเมื่อโปรแกรมเสร็จแล้ว
                                         - มีการกำหนดProductที่ต้องส่งมอบในแต่ละงานอย่างชัดเจน       - ต้องรอให้การออกแบทั้งหมดเสร็จสมบูรณ์ก่อน จึงจะเริ่มเขียนโปรแกรมได้
                                         - การทดสอบ แต่ละกระบวนการถูกตัดขาดออกจากกันทำให้ง่าย      - หากเจอปัญหาระหว่าง coding ในการออกแบบต้องรอแก้รอบใหม่
                                          ในการควบคุมความคืบหน้าในการพัฒนาระบบ
--------------------------------------------------------------------------------------------------------------------------------------------------------    
    
    incremental development              - แบ่งระบบงานออกเป็นระบบย่อยๆหากเจอปัญหาจะส่งผลใน        - ไม่สามารถทำกับระบบงานใหญ่ๆได้
                                           ระบบงานย่อยเท่านั้น                                    - ระบบงานย่อยที่ใช้งานอยู่อาจจะทำให้การทำงานสะดุด
                                         - เห็นความก้าวหน้าของระบบได้ตลอด                         - มีความเสี่ยงสูง เนื่องจากมีการนำระบบย่อยมาประกอบรวมกัน
--------------------------------------------------------------------------------------------------------------------------------------------------------
    Spiral Model                         - ในแต่ละรอบมีขั้นตอนประมวลผลที่สิ้นสุดภายในรอบเดียว          - ถ้าการวิเคราะห์เกิดผิดพลาด จะทำให้ Software Produce ที่ออกมาผิดพลาด
                                         - สามารถแก้ไขข้อผิดพลาดที่จะเกิดขึ้นตั้งแต่เนิ่นๆ เพราะมี          ทำให้เกิดค่าใช้จ่ายที่เพิ่มขึ้น
                                         การวิเคราะห์ความเสี่ยงและเห็นความคืบหน้าของงานอย่างชัดเจน      
                                         - มีความเป็นอิสระต่อกันทางด้านการพัฒนาและการแก้ไขจึงสามารถ
                                         แบ่งส่วนการพัฒนาเป็น Module ได้
--------------------------------------------------------------------------------------------------------------------------------------------------------    
    Rapid Application Development (RAD)  - เป็นวิธีการพัฒนาแบบรวดเร็ว ลดต้นทุนและเวลาในการพัฒนา       - ตัวระบบไม่มีความยืดหยุ่นเพราะถูกจำกัดเวลา
                                                                                               - ตัวระบบอาจไม่มีความสมบูรณ์
--------------------------------------------------------------------------------------------------------------------------------------------------------                                                                    
3. จงบอกข้อแตกต่างระหว่าง user requirement และ system requirement
ตอบ user requirement เป็นความต้องการของลูกค้าหรือผู้ที่เกี่ยวข้องกับระบบ เช่น สี ขนาดตัวอักษร รูปแบบดีไซน์ของระบบ หรือสิ่งที่ต้องการจากการใช้ระบบ ส่วน system requirement เป็นการกำหนดความต้องการ
ของการทำงานฟังก์ชันและบริการต่างๆ ของระบบ

4. จงยกตัวอย่างเทคโนโลยีที่มีซอฟต์แวร์เข้ามามีส่วนร่วมในอดีต ที่ทำให้คนต้องออกจากงานจำนวนมาก และให้เหตุผลที่เป็นเช่นนั้น
ตอบ 

5. จากข้อ 3. ในฐานะนักวิศวกรรมซอฟค์แวร์ ท่านมีโอกาสที่จะถูกให้ออกจากงานหรือไม่ และ ถ้าไม่อยากถูกให้ออกจากงาน ท่านคิดว่าควรทำงานในส่วนใดของกระบวนการ
ตอบ 
